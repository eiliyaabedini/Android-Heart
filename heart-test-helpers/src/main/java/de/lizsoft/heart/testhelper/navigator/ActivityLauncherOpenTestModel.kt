package de.lizsoft.heart.testhelper.navigator

import android.app.Activity
import android.view.View
import java.io.Serializable

class ActivityLauncherOpenTestModel(
    private val closeOtherActivitiesCalled: Boolean = false,
    private val addArgumentCalled: Serializable? = null,
    private val addTransitionViewCalled: Triple<Activity, View, String>? = null,
    private val addTheOnlyParentCalled: Class<*>? = null,
    private val getPendingIntentCalled: Boolean = false,
    private val getIntentCalled: Boolean = false,
    private val startActivityCalled: Boolean = false,
    private val startActivityForResultCalled: Boolean = false
) {

    fun closeOtherActivitiesCalled(): ActivityLauncherOpenTestModel {
        assert(closeOtherActivitiesCalled)
        return this
    }

    fun addArgumentCalled(): ActivityLauncherOpenTestModel {
        assert(addArgumentCalled != null)
        return this
    }

    fun addArgumentEqualTo(argument: Serializable?): ActivityLauncherOpenTestModel {
        assert(addArgumentCalled == argument)
        return this
    }

    fun addTransitionViewCalled(): ActivityLauncherOpenTestModel {
        assert(addTransitionViewCalled != null)
        return this
    }

    fun addTransitionViewEqualTo(activity: Activity, view: View, string: String): ActivityLauncherOpenTestModel {
        assert(addTransitionViewCalled == Triple(activity, view, string))
        return this
    }

    fun addTheOnlyParentCalled(): ActivityLauncherOpenTestModel {
        assert(addTheOnlyParentCalled != null)
        return this
    }

    fun addTheOnlyParentCalledEqualTo(parentClass: Class<*>?): ActivityLauncherOpenTestModel {
        assert(addTheOnlyParentCalled == parentClass)
        return this
    }

    fun getPendingIntentCalled(): ActivityLauncherOpenTestModel {
        assert(getPendingIntentCalled)
        return this
    }

    fun getIntentCalled(): ActivityLauncherOpenTestModel {
        assert(getIntentCalled)
        return this
    }

    fun startActivityCalled(): ActivityLauncherOpenTestModel {
        assert(startActivityCalled)
        return this
    }

    fun startActivityForResultCalled(): ActivityLauncherOpenTestModel {
        assert(startActivityForResultCalled)
        return this
    }
}
