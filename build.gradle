// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.MIN_SDK_VERSION = 23
    ext.TARGET_SDK_VERSION = 29
    ext.BUILD_TOOLS_VERSION = '29.0.0'

    ext.USE_REMOTE_HEART = false
    ext.HEART_VERSION = '1.1.14'

    ext.KOTLIN_VERSION = '1.3.61'
    ext.SUPPORT_ANNOTATIONS_VERSION = '1.1.0'
    ext.KOIN_VERSION = '2.0.1'
    ext.TIMBER_VERSION = '4.7.1'
    ext.RX_ANDROID_VERSION = '2.1.1'
    ext.RX_JAVA_VERSION = '2.2.12'
    ext.RX_KOTLIN_VERSION = '2.4.0'
    ext.OKHTTP_VERSION = '4.1.0'
    ext.RETROFIT_VERSION = '2.6.1'
    ext.GSON_VERSION = '2.8.5'
    ext.APPCOMPAT = '1.2.0-alpha01'
    ext.CORE_KTX = '1.1.0'
    ext.CONSTRAINT_LAYOUT = '1.1.3'
    ext.MULTIDEX = '2.0.1'
    ext.ANDROID_MATERIAL = '1.0.0'
    ext.ANDROID_WORD_RXJAVA2 = '2.2.0'
    ext.RX_PAPARAZZO = '0.6.1-2.x'
    ext.RX_BINDING = '3.0.0'
    ext.GLIDE = '4.9.0'
    ext.GOOGLE_PLACES = '2.1.0'
    ext.GOOGLE_LOCATION = '17.0.0'
    ext.FIREBASE_MESSAGING = '20.1.0'
    ext.FIREBASE_IID = '20.0.2'
    ext.FIREBASE_REMOTE_CONFIG = '19.1.0'
    ext.FIREBASE_DYNAMIC_LINKS = '19.0.0'
    ext.FIREBASE_CORE = '17.2.0'
    ext.PLAY_SERVICE_BASE = '17.1.0'
    ext.PLAY_SERVICE_MAP = '17.0.0'

    repositories {
        google()
        jcenter()

        maven {
            url 'https://maven.fabric.io/public'
        }

        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
    }
    dependencies {
        classpath 'com.google.gms:google-services:4.3.3'

        classpath 'com.android.tools.build:gradle:3.5.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$KOTLIN_VERSION"

        classpath 'io.fabric.tools:gradle:1.31.1'

        classpath 'com.uber:okbuck:0.48.2'

        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'

        classpath("com.github.triplet.gradle:play-publisher:2.5.0-SNAPSHOT")
    }
}

apply plugin: 'com.uber.okbuck'
apply plugin: 'com.github.triplet.play'

//https://github.com/uber/okbuck/blob/d963834868e9aa489d56bd365be2053ed879fe0e/build.gradle
okbuck {
    buildToolVersion = BUILD_TOOLS_VERSION
    target = "android-28"

    lint {
        disabled = true
    }

    exopackage = [
          appDebug: true
    ]
    linearAllocHardLimit = [
          app: 430000
    ]

    extraDepCachesMap << [tools: true]

    // Set a specific buck binary or alternate buck distribution.
//    buckBinary = "com.github.facebook:buck:fa8140f44861989d62b09e2e783b803bc1111e04@pex"
//    buckBinary = "com.github.omegasoft7:buck:fc8f977a04b2847c6707668a73320ad336d20527@pex" //https://github.com/uber/okbuck/issues/798
//    buckBinary = "com.github.omegasoft7:buck:e11805a973a817a5dd69e9cfd375bd2980a507fa@pex"

    primaryDexPatterns = [
          app: [
                '^androidx/multidex/',
                '^de/lizsoft/AppShell^',
                '^de/lizsoft/App^',
                '^de/lizsoft/BuildConfig^',
                '^com/facebook/buck/android/support/exopackage/'
          ]
    ]
    appLibDependencies = [
          'appDebug': [
                'buck-android-support',
                'androidx.multidex:multidex'
          ]
    ]
    extraBuckOpts = [
          'appDebug': [
                "android_binary": ["trim_resource_ids = True"]
          ]
    ]
    buckProjects = project.subprojects.findAll { it.name != "plugin" && it.name != "transform-cli" }

    lintExclude.put("another-app", ["debug"])


    intellij {
        sources = true
    }

//    test {
//        espresso = false
//        espressoForLibraries = false
//        robolectric = true
//        robolectricApis = ["21", "27"]
//    }

    wrapper {
        watch += ["**/schema.json"]
        watch += ["**/*.graphql"]
        watch += ["**/google-services.json"]
        watch += ["**/builder_config.json"]
        watch += ["**/*.gradle"]
    }

    kotlin {
        version = KOTLIN_VERSION
    }

//    lint {
//        version = deps.versions.androidTools
//        jvmArgs = '-Xmx1g'
//    }

    transform {
        transforms = [
              "appProd": [
                    [transform: "com.uber.okbuck.transform.DummyTransform"]
              ]
        ]
    }

    lint {
        version = BUILD_TOOLS_VERSION
        jvmArgs = '-Xmx1g'
    }

    jetifier {
        aarOnly = true
        exclude = [
              "androidx.*"
        ]
        customConfigFile = "tooling/jetifier/custom.config"
    }
    libraryBuildConfig = true

    ruleOverrides {
        defaultImportLocation = "//tooling/buck-defs:project_targets.bzl"
        defaultRuleNamePrefix = "project_"
        override {
            nativeRuleName = "android_binary"
        }
//        override {
//            nativeRuleName = "prebuilt_jar"
//        }
    }

    externalDependencies {
        resolutionAction = "latest"
        allowAllVersions = [
              "org.robolectric:android-all",
        ]
//        enableExportedDeps = false
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }

        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }

        //Heart lib
        maven { url 'https://dl.bintray.com/lizsoft/Heart' }
    }
}

configurations.all {
    exclude group: 'com.google.guava', module: 'listenablefuture'
    resolutionStrategy {
        resolutionStrategy.forcedModules = [
              "io.reactivex.rxjava2:rxjava:$RX_JAVA_VERSION",
        ]
        dependencySubstitution {
            substitute module('androidx.multidex:multidex') with module('androidx.multidex:multidex:2.0.1')
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

tasks.whenTaskAdded { task ->
    if (task.name == 'assembleDebug') { //TODO add assembleRelease here as well
        task.dependsOn parseJson
    }
}
